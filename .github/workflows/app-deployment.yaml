name: ECS/EKS Image Deployment

on:
  push:
    branches:
      - main
      - DGC2129-patch-1 
      - dev
  pull_request:
    branches:
      - main
      - dev

env:
  ECR_REPOSITORY: patient-service
  IMAGE_TAG: latest
  K8S_DEPLOYMENT: patient-service
  K8S_NAMESPACE: default

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install      

  docker-build-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log into GH registry
        uses: actions/checkout@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TMP_PAT_TOKEN }}            

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin             

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: docker build
        run: |
          docker build -t gopidevopskanna/github_action_docker:latest .

      - name: docker Push
        run: |
          docker push gopidevopskanna/github_action_docker:latest     


  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure kubectl
        uses: azure/setup-kubectl@v3

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode >> $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Deploy to Kubernetes
        env:
          REPO_URL: https://github.com/Patient-Service
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
          kubectl set image deployment/$K8S_DEPLOYMENT patient-service=github_action_docker:latest -n $K8S_NAMESPACE
          kubectl rollout status deployment/$K8S_DEPLOYMENT -n $K8S_NAMESPACE